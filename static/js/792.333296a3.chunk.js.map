{"version":3,"file":"static/js/792.333296a3.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["// material-ui\nimport { Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        {/* <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography> */}\n    </Stack>\n);\n\nexport default AuthFooter;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import { useTheme } from '@mui/material/styles';\nimport { Button, FormControl, Grid, MenuItem, Select, TextField, CircularProgress, useMediaQuery } from '@mui/material';\nimport { Controller, useForm } from 'react-hook-form';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport firebase from '../../../../frebase/firebase';\nimport { useNavigate } from 'react-router-dom';\nimport { InputLabel } from '@mui/material';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { useState } from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport ListItemText from '@mui/material/ListItemText';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { getDownloadURL, ref as storageReference, uploadBytes, getStorage } from 'firebase/storage';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP\n            //   width: 180,\n        }\n    }\n};\n\nconst FirebaseRegister = ({ ...others }) => {\n    const [loading, setLoading] = useState(false);\n    const [userRole, setUserRole] = useState([]);\n    const [userRoleError, setUserRoleError] = useState(false);\n    const [locationError, setLocationError] = useState(false);\n    const [profileImageError, setProfileImageError] = useState(false);\n    const [profileImage, setProfileImage] = useState(null);\n    const [location, setLocation] = useState('');\n    const navigate = useNavigate();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const ref = firebase.firestore().collection('Users');\n    const {\n        handleSubmit,\n        formState: { errors },\n        control\n    } = useForm();\n    const onSubmit = async (userData) => {\n        if (profileImage === null) {\n            setProfileImageError(true);\n            return;\n        }\n        if (userRole.length === 0) {\n            setUserRoleError(true);\n            return;\n        } else if (location.length === 0) {\n            setLocationError(true);\n            return;\n        } else {\n            const storageRef = storageReference(getStorage(), `/Profile Image/${profileImage.name}`);\n            const imgSnapshot = await uploadBytes(storageRef, profileImage);\n            const url = await getDownloadURL(imgSnapshot.ref);\n            userData.userRole = userRole[0];\n            userData.userType = userRole;\n            userData.location = location.label;\n            userData.profileImage = url;\n            setLoading(true);\n            Object.keys(userData).forEach((key) => {\n                if (userData[key] === undefined) {\n                    delete userData[key];\n                }\n            });\n            userData.isBlocked = false;\n            userData.isRejected = false;\n            userData.newUser = true;\n            userData.isApproved = userData.userRole[0] == 'Master' || userData.userRole[1] == 'Master' ? false : true;\n            const auth = getAuth();\n            createUserWithEmailAndPassword(auth, userData.email, userData.password)\n                .then((userCredential) => {\n                    const user = userCredential.user;\n                    userData.uid = user.uid;\n                    const { password, ...rest } = userData;\n                    ref.doc(rest.uid)\n                        .set({ ...rest, createdAt: Date.now() })\n                        .then(() => {\n                            setLoading(false);\n                            navigate('/active-users');\n                        })\n                        .catch((err) => {\n                            setLoading(false);\n                            console.error(err);\n                        });\n                })\n                .catch((error) => {\n                    setLoading(false);\n                    const errorMessage = error.message;\n                    console.log(errorMessage);\n                });\n        }\n    };\n\n    const handleChange = (event) => {\n        const {\n            target: { value }\n        } = event;\n        setUserRole(\n            // On autofill we get a stringified value.\n            typeof value === 'string' ? value.split(',') : value\n        );\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}></Grid>\n            {loading ? (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress />\n                </div>\n            ) : (\n                <form noValidate onSubmit={handleSubmit(onSubmit)} {...others}>\n                    <Grid container spacing={matchDownSM ? 0 : 2}>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"firstName\"\n                                control={control}\n                                rules={{ required: true }}\n                                render={({ field }) => <TextField fullWidth label=\"First Name\" margin=\"normal\" {...field} />}\n                            />\n                            {errors.firstName && <span style={{ color: 'red' }}>firstName is required</span>}\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"lastName\"\n                                control={control}\n                                rules={{ required: true }}\n                                render={({ field }) => <TextField fullWidth label=\"Last Name\" margin=\"normal\" {...field} />}\n                            />\n                            {errors.lastName && <span style={{ color: 'red' }}>lastName is required</span>}\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={matchDownSM ? 0 : 2}>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{ required: true }}\n                                render={({ field }) => <TextField fullWidth label=\"Email\" margin=\"normal\" {...field} />}\n                            />\n                            {errors.email && <span style={{ color: 'red' }}>email is required</span>}{' '}\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"username\"\n                                control={control}\n                                rules={{ required: true }}\n                                render={({ field }) => <TextField fullWidth label=\"User Name\" margin=\"normal\" {...field} />}\n                            />\n                            {errors.username && <span style={{ color: 'red' }}>username is required</span>}\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={matchDownSM ? 0 : 2}>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"userRole\"\n                                control={control}\n                                rules={{ required: false }}\n                                render={({ field }) => (\n                                    <FormControl margin=\"normal\" fullWidth {...field}>\n                                        <InputLabel id=\"demo-multiple-checkbox-label\">User Role</InputLabel>\n                                        <Select\n                                            labelId=\"demo-multiple-checkbox-label\"\n                                            id=\"demo-multiple-checkbox\"\n                                            multiple\n                                            value={userRole}\n                                            onChange={handleChange}\n                                            input={<OutlinedInput label=\"User Role\" />}\n                                            renderValue={(selected) => selected.join(', ')}\n                                            MenuProps={MenuProps}\n                                        >\n                                            <MenuItem key={'Master'} value={'Master'} disabled={userRole[0] == 'Admin' ? true : false}>\n                                                <Checkbox checked={userRole.indexOf('Master') > -1} />\n                                                <ListItemText primary={'Master'} />\n                                            </MenuItem>\n                                            <MenuItem\n                                                key={'Admin'}\n                                                value={'Admin'}\n                                                disabled={userRole[0] == 'Master' || userRole[0] == 'Player' ? true : false}\n                                            >\n                                                <Checkbox checked={userRole.indexOf('Admin') > -1} />\n                                                <ListItemText primary={'Admin'} />\n                                            </MenuItem>\n                                            <MenuItem key={'Player'} value={'Player'} disabled={userRole[0] == 'Admin' ? true : false}>\n                                                <Checkbox checked={userRole.indexOf('Player') > -1} />\n                                                <ListItemText primary={'Player'} />\n                                            </MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                )}\n                            />\n                            {userRoleError && <span style={{ color: 'red' }}>userRole is required</span>}{' '}\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"password\"\n                                control={control}\n                                rules={{ required: true, minLength: 8 }}\n                                render={({ field }) => (\n                                    <TextField type={'password'} fullWidth label=\"Password\" margin=\"normal\" {...field} />\n                                )}\n                            />\n                            {errors.password && <span style={{ color: 'red' }}>password is required and minimum length is 8</span>}\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={matchDownSM ? 0 : 2}>\n                        <Grid item xs={12} sm={6}>\n                            <GooglePlacesAutocomplete\n                                selectProps={{\n                                    placeholder: 'Location',\n                                    value: location,\n                                    onChange: (value) => {\n                                        setLocation(value);\n                                    },\n\n                                    styles: {\n                                        control: (provided) => ({\n                                            ...provided,\n                                            marginTop: '16px',\n                                            height: '51px',\n                                            borderRadius: '12px',\n                                            background: '#fafafa',\n                                            color: 'red'\n                                        }),\n                                        menu: (provided) => ({\n                                            ...provided,\n                                            zIndex: 100\n                                        })\n                                    }\n                                }}\n                                apiKey=\"AIzaSyAyItdXh8Zmxa7iCAyDVPH_UAJ5iUTGtEA\"\n                            />\n                            {locationError && <span style={{ color: 'red' }}>Location is required.</span>}\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"birthday\"\n                                type=\"date\"\n                                rules={{ required: true }}\n                                control={control}\n                                render={({ field }) => <TextField fullWidth label=\"Birth date\" margin=\"normal\" {...field} />}\n                            />\n                            {errors.birthday && <span style={{ color: 'red' }}>BirthDate is required.</span>}\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={matchDownSM ? 0 : 2}>\n                        <Grid item xs={12} sm={6}>\n                            <Controller\n                                name=\"about\"\n                                rules={{ required: true }}\n                                control={control}\n                                render={({ field }) => <TextField fullWidth label=\"About\" margin=\"normal\" {...field} />}\n                            />\n                            {errors.about && <span style={{ color: 'red' }}>About is required.</span>}\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Button\n                                component=\"label\"\n                                variant=\"outlined\"\n                                size=\"large\"\n                                sx={{ borderRadius: '10px', marginTop: '15px', height: '52px' }}\n                                fullWidth\n                            >\n                                Upload Profile Image\n                                <input hidden accept=\"image/*\" type=\"file\" onChange={(e) => setProfileImage(e.target.files[0])} />\n                            </Button>\n\n                            {profileImageError && <span style={{ color: 'red' }}>Profile image is required.</span>}\n                        </Grid>\n                    </Grid>\n                    <Grid sx={{ display: 'flex', justifyContent: 'center', marginTop: '15px' }}>\n                        <AnimateButton>\n                            <Button disableElevation sx={{ width: 200, background: '#B92136' }} size=\"large\" type=\"submit\" variant=\"contained\">\n                                Create\n                            </Button>\n                        </AnimateButton>\n                    </Grid>\n                </form>\n            )}\n        </>\n    );\n};\n\nexport default FirebaseRegister;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport AuthRegister from '../auth-forms/AuthRegister';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '20vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item xs={12}>\n                                        <AuthRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"names":["direction","justifyContent","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","others","useState","loading","setLoading","userRole","setUserRole","userRoleError","setUserRoleError","locationError","setLocationError","profileImageError","setProfileImageError","profileImage","setProfileImage","location","setLocation","navigate","useNavigate","useTheme","matchDownSM","useMediaQuery","breakpoints","down","ref","firebase","collection","useForm","handleSubmit","errors","formState","control","onSubmit","userData","length","storageRef","storageReference","getStorage","name","uploadBytes","imgSnapshot","getDownloadURL","url","userType","label","Object","keys","forEach","key","undefined","isBlocked","isRejected","newUser","isApproved","auth","getAuth","createUserWithEmailAndPassword","email","password","then","userCredential","user","uid","rest","doc","set","createdAt","Date","now","catch","err","console","error","errorMessage","message","log","handleChange","event","value","target","split","Grid","container","spacing","display","flexDirection","alignItems","CircularProgress","noValidate","item","rules","required","render","field","TextField","fullWidth","firstName","color","lastName","username","FormControl","InputLabel","id","Select","labelId","multiple","onChange","input","OutlinedInput","renderValue","selected","join","MenuItem","disabled","Checkbox","checked","indexOf","ListItemText","minLength","type","selectProps","placeholder","styles","provided","marginTop","height","borderRadius","background","menu","zIndex","apiKey","birthday","about","Button","component","variant","size","hidden","accept","e","files","AnimateButton","disableElevation","width","m","mb","AuthCardWrapper","AuthRegister","Divider","mt","AuthFooter"],"sourceRoot":""}