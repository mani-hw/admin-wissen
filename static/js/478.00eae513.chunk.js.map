{"version":3,"file":"static/js/478.00eae513.chunk.js","mappings":"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","sources":["views/users/approvals.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport UsersTable from 'shared/usersTable';\nimport MainCard from 'ui-component/cards/MainCard';\nimport firebase from '../../frebase/firebase';\n\nconst columns = [\n    {\n        name: 'User Name',\n        selector: (row) => row.status\n    },\n    {\n        name: 'Email',\n        selector: (row) => row.role\n    },\n\n    {\n        name: 'Location',\n        selector: (row) => row.status\n    },\n    {\n        name: 'User Role',\n        selector: (row) => row.status\n    },\n    {\n        name: 'Actions',\n        selector: (row) => row.actions\n    }\n];\n\nconst Approvals = () => {\n    const [tableData, setTableData] = useState([]);\n    const [lastDoc, setLastDoc] = useState();\n    const [firstDoc, setFirstDoc] = useState();\n    const [page, setPage] = useState(0);\n    const [length, setLength] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    const ref = firebase.firestore().collection('Users');\n    async function getUsers(limit) {\n        setLoading(true);\n        ref.limit(limit)\n            .where('isApproved', '==', false)\n            .where('isBlocked', '==', false)\n            .where('userRole', '==', 'Master')\n            .get()\n            .then((user) => {\n                const users = user.docs.map((doc) => doc.data());\n                const doc = user.docs[user.docs.length - 1];\n                setLastDoc(doc);\n                setTableData(users);\n                setLoading(false);\n            });\n        const count = (await ref.where('isApproved', '==', false).where('isRejected', '==', false).get()).docs.length;\n        setLength(count);\n    }\n\n    const handleChangeRowsPerPage = async (event) => {\n        try {\n            await getUsers(event.target.value);\n            setRowsPerPage(event.target.value);\n            setPage(0);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setLoading(true);\n        const previousPage = page;\n        setPage(newPage);\n        if (newPage > previousPage) {\n            ref.orderBy('createdAt', 'desc')\n                .limit(rowsPerPage)\n                .startAfter(lastDoc)\n                .where('isApproved', '==', false)\n                .where('isRejected', '==', false)\n                .get()\n                .then((user) => {\n                    const users = user.docs.map((doc) => doc.data());\n                    const ldoc = user.docs[user.docs.length - 1];\n                    const fdoc = user.docs[0];\n                    setFirstDoc(fdoc);\n                    setLastDoc(ldoc);\n                    setTableData(users);\n                    setLoading(false);\n                });\n        } else {\n            ref.orderBy('createdAt', 'desc')\n                .limitToLast(rowsPerPage + 1)\n                .endBefore(firstDoc)\n                .where('isApproved', '==', false)\n                .where('isRejected', '==', false)\n                .get()\n                .then((user) => {\n                    const users = user.docs.map((doc) => doc.data());\n                    const ldoc = user.docs[user.docs.length - 1];\n                    const fdoc = user.docs[0];\n                    setFirstDoc(fdoc);\n                    setLastDoc(ldoc);\n                    setTableData(users);\n                    setLoading(false);\n                });\n        }\n    };\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    return (\n        <MainCard title=\"Approvals\">\n            <UsersTable\n                columns={columns}\n                data={tableData && tableData}\n                setTableData={setTableData}\n                rowsPerPage={rowsPerPage}\n                type=\"Approved\"\n                page={page}\n                setPage={setPage}\n                handleChangePage={handleChangePage}\n                length={length}\n                setLoading={setLoading}\n                loading={loading}\n                handleChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </MainCard>\n    );\n};\n\nexport default Approvals;\n"],"names":["columns","name","selector","row","status","role","actions","useState","tableData","setTableData","lastDoc","setLastDoc","firstDoc","setFirstDoc","page","setPage","length","setLength","loading","setLoading","rowsPerPage","setRowsPerPage","ref","firebase","collection","getUsers","limit","where","get","then","user","users","docs","map","doc","data","count","handleChangeRowsPerPage","event","target","value","console","log","useEffect","title","type","handleChangePage","newPage","previousPage","orderBy","startAfter","ldoc","fdoc","limitToLast","endBefore"],"sourceRoot":""}